
msgid "Creating an application from template"
msgstr "Создание приложения по шаблону"

msgid ""
"To create an application from a Cartridge template, run this in any "
"directory:"
msgstr ""
"Чтобы создать приложение по шаблону, в любой директории выполните следующую "
"команду:"

msgid "cartridge create [path] [flags]"
msgstr ""

msgid "Flags"
msgstr "Параметры"

msgid "``--name``"
msgstr "``--name``"

msgid "Application name."
msgstr "Имя приложения."

msgid "``--from``"
msgstr "``--from``"

msgid "Path to the application template. See details below."
msgstr "Путь к шаблону приложения (см. ниже)."

msgid "``--template``"
msgstr "``--template``"

msgid ""
"Name of the application template. Currently, only the ``cartridge`` template"
" is supported."
msgstr ""
"Имя шаблона приложения. В настоящее время поддерживается только шаблон "
"``cartridge``."

msgid ""
"``create`` also supports :doc:`global flags "
"</book/cartridge/cartridge_cli/global-flags>`."
msgstr ""
"Команда ``create`` также поддерживает :doc:`глобальные параметры "
"</book/cartridge/cartridge_cli/global-flags>`."

msgid "Details"
msgstr "Описание"

msgid "Your application will appear in the ``<path>/<app-name>/`` directory."
msgstr "Приложение создается в директории ``<путь>/<имя-приложения>/``."

msgid ""
"The template used by default is ``cartridge``. It produces a simple "
"Cartridge application that includes:"
msgstr ""
"Несложное приложение на основе шаблона по умолчанию ``cartridge`` содержит "
"следующие компоненты:"

msgid "One custom role with an HTTP endpoint."
msgstr "Пользовательскую роль с конечной точкой для HTTP-запросов."

msgid "Sample tests and basic test helpers."
msgstr "Примеры тестов и базовые утилиты для тестирования."

msgid "Development files like ``.luacheckrc``."
msgstr "Файлы для разработки, такие как ``.luacheckrc``."

msgid ""
"If you have ``git`` installed, a Git repository with a ``.gitignore`` file "
"will be also set up in the project root directory. The initial commit will "
"be created and tagged with the application :ref:`version <cartridge-"
"versioning>`."
msgstr ""
"Если у вас установлен ``git``, в корневой директории проекта создается Git-"
"репозиторий с файлом ``.gitignore``. Сразу формируется первоначальный коммит"
" с тегом :ref:`версии <cartridge-versioning>` приложения."

msgid "Project directory"
msgstr "Директория проекта"

msgid ""
"Let's take a closer look at the files inside the ``<app_name>/`` directory:"
msgstr "В директории ``<имя_приложения>/`` находится несколько групп файлов."

msgid "Application files:"
msgstr "Файлы приложения:"

msgid ""
"``app/roles/custom-role.lua``: a sample :ref:`custom role <cartridge-roles>`"
" with a simple HTTP API. Can be enabled as ``app.roles.custom``."
msgstr ""
"``app/roles/custom-role.lua`` --- пример :ref:`кластерной роли <cartridge-"
"roles>` с простым HTTP API. Эту роль можно включить, передав ее как "
"``app.roles.custom``."

msgid "``<app_name>-scm-1.rockspec``: contains application dependencies."
msgstr ""
"``<имя_приложения>-scm-1.rockspec`` --- файл, содержащий зависимости "
"приложения."

msgid "``init.lua``: application entry point."
msgstr "``init.lua`` --- точка входа в приложение."

msgid ""
"``stateboard.init.lua`` application :doc:`stateboard "
"</book/cartridge/cartridge_cli/commands/failover>` entry point."
msgstr ""
"``stateboard.init.lua`` --- точка входа в :doc:`экземпляр stateboard "
"</book/cartridge/cartridge_cli/commands/failover>` приложения."

msgid "Build and packaging files:"
msgstr "Файлы, необходимые для сборки и упаковки:"

msgid "``cartridge.pre-build``"
msgstr "``cartridge.pre-build``"

msgid "``cartridge.post-build``"
msgstr "``cartridge.post-build``"

msgid "``Dockerfile.build.cartridge``"
msgstr "``Dockerfile.build.cartridge``"

msgid "``Dockerfile.cartridge``"
msgstr "``Dockerfile.cartridge``"

msgid ""
"To learn more, check the documentation on :doc:`pre-build and post-build "
"scripts <../pre-post-build>`, :doc:`building your application with Docker "
"<pack/building-in-docker>`, and :doc:`creating a Docker image of your "
"application <pack/docker>`."
msgstr ""
"Подробную информацию вы найдете в документации по :doc:`скриптам pre-build и"
" post-build <../pre-post-build>`, :doc:`сборке приложения с помощью Docker "
"<pack/building-in-docker>` и :doc:`созданию Docker-образа приложения "
"<pack/docker>`."

msgid "Development files:"
msgstr "Файлы, необходимые для разработки:"

msgid ""
"``deps.sh`` resolves dependencies listed in the ``.rockspec`` file and "
"installs test dependencies (like ``luatest``)."
msgstr ""
"``deps.sh`` решает проблемы с зависимостями из файла ``.rockspec`` и "
"устанавливает зависимости для тестирования (например, ``luatest``)."

msgid ""
"``instances.yml`` contains the configuration of instances and is used by "
"``cartridge start``."
msgstr ""
"``instances.yml`` содержит конфигурацию экземпляров и используется командой "
"``cartridge start``."

msgid ""
"``.cartridge.yml`` contains the Cartridge configuration and is also used by "
"``cartridge start``."
msgstr ""
"``.cartridge.yml`` содержит конфигурацию Cartridge и используется командой "
"``cartridge start``."

msgid "``systemd-unit-params.yml`` contains systemd parameters."
msgstr "``systemd-unit-params.yml`` содержит параметры systemd."

msgid ""
"``tmp`` is a directory for temporary files used as a run directory (see "
"``.cartridge.yml``)."
msgstr ""
"``tmp`` --- директория для временных файлов, выступающая в качестве "
"директории запуска (см. ``.cartridge.yml``)."

msgid "``.git`` is the directory responsible for the Git repository."
msgstr "``.git`` --- директория Git-репозитория."

msgid ""
"``.gitignore`` is a file where you can specify the files for Git to ignore."
msgstr "В файле ``.gitignore`` можно указать файлы, игнорируемые Git."

msgid "Test files (with sample tests):"
msgstr "Файлы, необходимые для тестирования, и примеры тестов:"

msgid ""
"test\n"
"├── helper\n"
"│   ├── integration.lua\n"
"│   └── unit.lua\n"
"│   ├── helper.lua\n"
"│   ├── integration\n"
"│   │   └── api_test.lua\n"
"│   └── unit\n"
"│       └── sample_test.lua"
msgstr ""

msgid "Configuration files:"
msgstr "Файлы конфигурации:"

msgid "``.luacheckrc``"
msgstr "``.luacheckrc``"

msgid "``.luacov``"
msgstr "``.luacov``"

msgid "``.editorconfig``"
msgstr "``.editorconfig``"

msgid "Using a custom template"
msgstr "Работа с пользовательскими шаблонами"

msgid ""
"By default, ``create`` uses a standard template named ``cartridge``. "
"However, you can also make a custom template. To create an application from "
"it, run ``cartridge create`` with the ``--from`` flag, specifying the path "
"to your template."
msgstr ""
"По умолчанию команда ``create`` задействует стандартный шаблон под названием"
" ``cartridge``. Вы также можете использовать собственный шаблон. Чтобы "
"создать по нему приложение, передайте в команде ``cartridge create`` "
"параметр ``--from``, указав в качестве аргумента путь к своему шаблону."

msgid ""
"If the template directory is a Git repository, all files in the ``.git`` "
"directory will be ignored upon instantiating the template. Instead, a new "
"git repo will be initialized for the newly created application."
msgstr ""
"Если шаблон находится в Git-репозитории, при создании приложения по этому "
"шаблону все файлы в директории ``.git`` игнорируются. Вместо этого для "
"нового приложения создается новый Git-репозиторий."

msgid ""
"Don't include the ``.rocks`` directory in your template application. To "
"specify application dependencies, use the ``.rockspec`` and ``cartridge.pre-"
"build`` files."
msgstr ""
"Чтобы задать зависимости для приложения, не следует создавать директорию "
"``.rocks`` в своем шаблоне --- используйте файлы ``.rockspec`` и "
"``cartridge.pre-build``."

msgid "Text variables"
msgstr "Текстовые переменные"

msgid ""
"Filenames and content can contain `text templates "
"<https://golang.org/pkg/text/template/>`_."
msgstr ""
"В именах и содержимом файлов можно использовать `текстовые переменные "
"<https://golang.org/pkg/text/template/>`_."

msgid "You can use the following variables:"
msgstr "Доступны следующие переменные:"

msgid "``Name``: application name."
msgstr "``Name`` --- имя приложения."

msgid ""
"``StateboardName``: application stateboard name (``<app-name>-stateboard``)."
msgstr ""
"``StateboardName`` --- имя экземпляра stateboard "
"(``<имя_приложения>-stateboard``)."

msgid "``Path``: absolute path to the application."
msgstr "``Path`` --- абсолютный путь к приложению."

msgid "For example:"
msgstr "Пример:"

msgid ""
"my-template\n"
"├── {{ .Name }}-scm-1.rockspec\n"
"└── init.lua\n"
"└── stateboard.init.lua\n"
"└── test\n"
"    └── sample_test.lua"
msgstr ""

msgid "``init.lua``:"
msgstr "``init.lua``:"

msgid ""
"print(\"Hi, I am {{ .Name }} application\")\n"
"print(\"I also have a stateboard named {{ .StateboardName }}\")"
msgstr ""
