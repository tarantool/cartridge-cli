
msgid "Building in Docker"
msgstr "Сборка в Docker"

msgid "To build your application in Docker, run this:"
msgstr "Чтобы собрать приложение в Docker, выполните следующую команду:"

msgid "cartridge pack --use-docker"
msgstr "cartridge pack --use-docker"

msgid ""
"You might want to perform application build in Docker if your distributable "
"is intended for a system different than the one you use."
msgstr ""
"Вам может понадобиться собрать приложение в Docker, если ваш дистрибутив "
"предназначен для системы, отличной от той, что вы используете."

msgid ""
"In this case, ``cartridge.pre-build``, ``tarantoolctl rocks make``, and "
"``cartridge.post-build`` run inside a Docker image that has a volume mapped "
"onto the build directory. As a result, the build directory will contain "
"Linux-specific application files and rock modules."
msgstr ""
"В этом случае ``cartridge.pre-build``, ``tarantoolctl rocks make`` и "
"``cartridge.post-build`` будут запущены в Docker-образе, том которого "
"(Docker volume) привязан к директории сборки. В результате директория сборки"
" будет содержать специфичные для Linux файлы приложения и модули ``rocks``."

msgid ""
"If you want to package a distribution on your local machine without using "
"Docker, check the :doc:`packaging overview "
"</book/cartridge/cartridge_cli/commands/pack>`."
msgstr ""
"Если вы хотите собрать дистрибутив на вашей локальной машине без "
"использования Docker, обратитесь к странице с описанием :doc:`команды pack "
"</book/cartridge/cartridge_cli/commands/pack>`."

msgid "Flags"
msgstr "Параметры"

msgid "``--build-from``"
msgstr "``--build-from``"

msgid ""
"Path to the base Dockerfile of the build image. Defaults to "
"``Dockerfile.build.cartridge`` in the application root directory."
msgstr ""
"Путь к базовому файлу Dockerfile сборочного образа. По умолчанию это "
"``Dockerfile.build.cartridge`` в корневой директории приложения."

msgid "``--cache-from``"
msgstr "``--cache-from``"

msgid ""
"Images that work as cache sources for both build and runtime images. See the"
" ``--cache-from`` flag for ``docker build``."
msgstr ""
"Образы, которые служат источниками кэша и для сборочного, и для запускаемого"
" образа. Ознакомьтесь с работой параметра ``--cache-from`` команды ``docker "
"build``."

msgid "``--sdk-path``"
msgstr "``--sdk-path``"

msgid ""
"Enterprise only. Path to the SDK to be delivered in the final artifact. "
"Alternatively, you can pass the path via the ``TARANTOOL_SDK_PATH`` "
"environment variable, which is of lower priority."
msgstr ""
"Только для Tarantool Enterprise. Путь к SDK, включаемому в итоговый "
"артефакт. Этот путь можно также передать с помощью переменной среды "
"``TARANTOOL_SDK_PATH``, однако у нее ниже приоритет."

msgid "``--sdk-local``"
msgstr "``--sdk-local``"

msgid ""
"Enterprise only. Deliver the SDK from the local machine in the final "
"artifact."
msgstr ""
"Только для Tarantool Enterprise. Используется, чтобы включить SDK с "
"локальной машины в итоговый артефакт."

msgid ""
"If you're building a Tarantool Enterprise application in Docker, make sure "
"you specify the path to the SDK you want to include in the image. Do that "
"using the ``--sdk-path`` flag or the environment variable "
"``TARANTOOL_SDK_PATH``, which has lower priority. To specify the currently "
"activated SDK, pass the ``--sdk-local`` flag."
msgstr ""
"Собирая приложение на Tarantool Enterprise в Docker, убедитесь, что вы "
"указали путь к SDK для включения в образ. Можно задать путь с помощью "
"параметра ``--sdk-path`` или использовать переменную среды "
"``TARANTOOL_SDK_PATH``, имеющую более низкий приоритет. Чтобы выбрать "
"текущий SDK, передайте параметр ``--sdk-local``."

msgid "Build image"
msgstr "Сборочный образ"

msgid ""
"The image where the package is built will be referred to as the build image."
" It has the following structure:"
msgstr ""
"Сборочным образом мы будем называть образ, который используется для сборки "
"пакета. Он имеет следующую структуру:"

msgid "Base image: ``centos:7`` (see below)."
msgstr "Базовый образ: ``centos:7`` (подробности далее)."

msgid ""
"Pre-installed packages: ``git``, ``gcc``, ``make``, ``cmake``, ``unzip``. "
"These are the packages required for building the default  ``cartridge`` "
"application."
msgstr ""
"Предустановленные пакеты: ``git``, ``gcc``, ``make``, ``cmake`` и ``unzip``."
" Эти пакеты необходимы для сборки приложения  ``cartridge``."

msgid "The image includes a version of Tarantool:"
msgstr "Образ будет включать одну из версий Tarantool:"

msgid ""
"If you use open-source Tarantool, the image contains the same version you've"
" used for local development."
msgstr ""
"Если вы используете для локальной разработки версию Tarantool с открытым "
"исходным кодом, образ будет содержать ту же версию."

msgid ""
"If you use Tarantool Enterprise, the SDK with Tarantool Enterprise binaries "
"is copied to the image. See the ``--sdk-path`` and ``--sdk-local`` flags."
msgstr ""
"Если вы используете Tarantool Enterprise, в образ будет скопирован SDK, "
"содержащий бинарные файлы Tarantool Enterprise. Обратитесь к описанию "
"параметров ``--sdk-path`` и ``--sdk-local`` выше."

msgid ""
"To customize your build image, use the ``Dockerfile.build.cartridge`` file "
"in the application root directory."
msgstr ""
"Изменить настройки сборочного образа можно в файле "
"``Dockerfile.build.cartridge`` в корневой директории приложения."

msgid "Installing packages required for application build"
msgstr "Установка пакетов, требуемых для сборки приложения"

msgid ""
"By default, the build image is based on ``centos:7``. ``git``, ``gcc``, "
"``make``, ``cmake``, and ``unzip`` packages are installed in that image. If "
"your application requires other packages for building, you can specify more "
"base layers for the build image."
msgstr ""
"По умолчанию сборочный образ основан на ``centos:7`` и включает "
"предустановленные пакеты ``git``, ``gcc``, ``make``, ``cmake`` и ``unzip``. "
"Если для сборки приложения требуются другие пакеты, вы можете задать для "
"сборочного образа дополнительные базовые слои (Docker layers)."

msgid ""
"To do that, place the file ``Dockerfile.build.cartridge`` in your "
"application root directory or pass a path to another Dockerfile with the "
"``--build-from`` flag. Make sure your Dockerfile starts with the line ``FROM"
" centos:7`` (except comments)."
msgstr ""
"Разместите файл ``Dockerfile.build.cartridge`` в корневой директории вашего "
"приложения или передайте путь к другому Dockerfile с помощью параметра "
"``--build-from``. Убедитесь, что ваш Dockerfile начинается со строки ``FROM "
"centos:7`` (не считая комментариев)."

msgid ""
"For example, if your application build requires ``gcc-c++``, customize the "
"Dockerfile as follows:"
msgstr ""
"Например, если для сборки приложения требуется ``gcc-c++``, в Dockerfile "
"должны быть следующие строки:"

msgid "``Dockerfile.build.cartridge``:"
msgstr "``Dockerfile.build.cartridge``:"

msgid ""
"FROM centos:7\n"
"RUN yum install -y gcc-c++\n"
"# Note that git, gcc, make, cmake, and unzip\n"
"# will be installed anyway"
msgstr ""

msgid ""
"``git``, ``gcc``, ``make``, ``cmake``, and ``unzip`` will be installed "
"anyway on the next layer."
msgstr ""
"Пакеты ``git``, ``gcc``, ``make``, ``cmake`` и ``unzip`` будут в любом "
"случае установлены на следующем слое."
