stages:
  - prebuild
  - test
  - pack

default:
  image: centos:8

variables:
  BUNDLE_VERSION: 2.3.1-20-ga4330d8
  PACKAGE_TARGETS: |
    OS=el DIST=6
    OS=el DIST=7
    OS=el DIST=8
    OS=fedora DIST=29
    OS=fedora DIST=30
    OS=ubuntu DIST=trusty
    OS=ubuntu DIST=xenial
    OS=ubuntu DIST=bionic
    OS=ubuntu DIST=eoan
    OS=debian DIST=jessie
    OS=debian DIST=stretch
    OS=debian DIST=buster
  PACKAGECLOUD_REPOS: |
    1_10
    2x
    2_2
    2_3
    2_4

.dind:
  tags:
    - dind
    - openstack
  services:
    - name: docker:dind
      alias: localhost
      command: ["--mtu=1300"]
  image: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_BUILDKIT: 1

prebuild:
  extends: .dind
  stage: prebuild
  only:
    changes:
      - Dockerfile
      - wrapdocker
      - .gitlab-ci.yml
      - test/requirements.txt
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CI_REGISTRY_IMAGE:go || true

    - docker build
      --cache-from $CI_REGISTRY_IMAGE:go
      --tag $CI_REGISTRY_IMAGE:go
      .
    - docker push $CI_REGISTRY_IMAGE:go
  after_script:
    - docker logout registry.gitlab.com

.test_template:
  stage: test
  extends: .dind
  image: $CI_REGISTRY_IMAGE:go
  script:
    - docker info
    - rpm --version
    - tarantool -V

    - export CARTRIDGE_TEMPDIR=`pwd`

    - mage lint
    - mage unit
    - mage integration
    - mage testExamples
    - mage e2e

test_enterprise-2.3:
  extends: .test_template
  cache:
    key: $BUNDLE_VERSION
    paths:
      - tmp/tarantool-enterprise
  variables:
    TARANTOOL_SDK_PATH: tmp/tarantool-enterprise
  before_script:
    - mage sdk
    - source tmp/tarantool-enterprise/env.sh

    - export TARANTOOL_SDK_PATH=`realpath $TARANTOOL_SDK_PATH`

.test_opensource:
  extends: .test_template
  before_script:
    - curl -L https://tarantool.io/installer.sh | VER=${TARANTOOL_VERSION} bash
    - yum install -y tarantool-devel

test_opensource-1.10:
  extends: .test_opensource
  variables:
    TARANTOOL_VERSION: '1.10'

test_opensource-2.3:
  extends: .test_opensource
  variables:
    TARANTOOL_VERSION: '2.3'

.pack:
  stage: pack
  extends: .dind
  image: $CI_REGISTRY_IMAGE:go
  variables:
    GORELEASER_IMAGE: goreleaser/goreleaser:latest
    WORKDIR: /go/src/github.com/tarantool/cartridge-cli
    GORELEASER_VERSION: v0.138.0
  before_script:
    - curl -O -L https://github.com/goreleaser/goreleaser/releases/download/${GORELEASER_VERSION}/goreleaser_amd64.rpm
    - yum install -y goreleaser_amd64.rpm
    - rm goreleaser_amd64.rpm
  script:
    - goreleaser release --rm-dist --skip-publish ${GORELEASER_FLAGS}
  artifacts:
    expire_in: 12h
    paths:
      - dist/

pack-tags:
  extends: .pack
  only:
    - tags

pack-master:
  extends: .pack
  variables:
    GORELEASER_FLAGS: --skip-validate
  only:
    - master

pack-manual:
  extends: .pack
  variables:
    GORELEASER_FLAGS: --skip-validate
  when: manual
