stages:
  - prebuild
  - test
  - publish
  - pack
  - deploy

default:
  image: centos:8

variables:
  BUNDLE_VERSION: 2.3.1-20-ga4330d8
  PACKAGE_TARGETS: |
    OS=el DIST=6
    OS=el DIST=7
    OS=el DIST=8
    OS=fedora DIST=29
    OS=fedora DIST=30
    OS=ubuntu DIST=trusty
    OS=ubuntu DIST=xenial
    OS=ubuntu DIST=bionic
    OS=ubuntu DIST=eoan
    OS=debian DIST=jessie
    OS=debian DIST=stretch
    OS=debian DIST=buster
  PACKAGECLOUD_REPOS: |
    1_10
    2x
    2_2
    2_3
    2_4

.dind:
  tags:
    - dind
  services:
    - name: docker:dind
      alias: localhost
      command: ["--mtu=1300"]
  image: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_BUILDKIT: 1

prebuild:
  extends: .dind
  stage: prebuild
  only:
    changes:
      - Dockerfile
      - wrapdocker
      - .gitlab-ci.yml
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CI_REGISTRY_IMAGE:go || true

    - docker build
      --cache-from $CI_REGISTRY_IMAGE:go
      --tag $CI_REGISTRY_IMAGE:go
      .
    - docker push $CI_REGISTRY_IMAGE:go
  after_script:
    - docker logout registry.gitlab.com

include:
  remote: https://tarantool.github.io/rocks.tarantool.org/helpers/gitlab-publish-rockspec.yml

.publish-rockspec: &publish-rockspec
  tags:
    - docker

publish-scm-1-rockspec:
  <<: *publish-rockspec

publish-tagged-rockspec:
  <<: *publish-rockspec

.test_template:
  stage: test
  extends: .dind
  image: $CI_REGISTRY_IMAGE:go
  variables:
    TARANTOOL_DOCKER_BUILD_ARGS: --cache-from cache-image
  script:
    - export CARTRIDGE_BUILDDIR=`pwd`

    - make lint
    - make unit
    - make integration
    - make test-examples
    - make e2e

test_enterprise-2.3:
  extends: .test_template
  cache:
    key: $BUNDLE_VERSION
    paths:
      - tmp/sdk
      - tmp/cache-image.tar
  variables:
    TARANTOOL_SDK_PATH: tmp/sdk
    CACHE_IMAGE_TARGET: cache-base
  before_script:
    - docker info
    - rpm --version
    - make tmp/sdk
    - source tmp/sdk/env.sh
    - tarantool -V
    - make ci_prepare
    - export TARANTOOL_SDK_PATH=`realpath $TARANTOOL_SDK_PATH`

.test_opensource:
  extends: .test_template
  cache:
    key: ${TARANTOOL_VERSION}
    paths:
      - tmp/cache-image.tar
  before_script:
    - docker info
    - rpm --version
    - curl -L https://tarantool.io/installer.sh | VER=${TARANTOOL_VERSION} bash
    - yum install -y tarantool-devel
    - make ci_prepare

test_opensource-1.10:
  extends: .test_opensource
  variables:
    TARANTOOL_VERSION: '1.10'
    CACHE_IMAGE_TARGET: cache-opensource-1.10

test_opensource-2.3:
  extends: .test_opensource
  variables:
    TARANTOOL_VERSION: '2.3'
    CACHE_IMAGE_TARGET: cache-opensource-2.3

.pack:
  stage: pack
  extends: .dind
  image: docker:git
  variables:
    PRODUCT: cartridge-cli
  before_script:
    - git describe --long
    - git clone https://github.com/packpack/packpack.git packpack
  script:
    - (set -ex;
      echo "$PACKAGE_TARGETS" | while read -r vars; do (
        [ -z "$vars" ] && exit;
        export $vars;
        BUILDDIR=`pwd`/build/$OS/$DIST packpack/packpack;
      ) done)
    - ls -l build/**/*
  artifacts:
    expire_in: 12h
    paths:
      - build/

pack-tags:
  extends: .pack
  only:
    - tags
    - master

pack-manual:
  extends: .pack
  when: manual

.deploy-packagecloud:
  stage: deploy
  tags:
    - docker
  image:
    name: digitalocean/packagecloud
    entrypoint: ['']
  script:
    - (set -ex;
      echo "$PACKAGE_TARGETS" | while read -r vars; do (
        [ -z "$vars" ] && exit;
        export $vars;
        for ext in deb rpm; do (
          [ -z "$(ls build/$OS/$DIST/*.$ext 2> /dev/null)" ] && exit;
          echo "$PACKAGECLOUD_REPOS" | while read -r repo; do (
            [ -z "$repo" ] && exit;
            package_cloud push $PACKAGECLOUD_USER/$repo/$OS/$DIST build/$OS/$DIST/*.$ext;
          ) done;
        ) done;
      ) done)

deploy-packagecloud-tags:
  extends: .deploy-packagecloud
  only:
    - tags

deploy-packagecloud-manual:
  extends: .deploy-packagecloud
  when: manual

.deploy-download.tarantool.org:
  stage: deploy
  tags:
    - docker
  image:
    name: debian:stretch
    entrypoint: ['']
  before_script:
    - apt update
    - apt install -y wget procmail reprepro pcregrep createrepo awscli
    - gpg --import <(echo "$GPG_KEY")
    - wget $UPDATE_REPO_PATH
  script:
    - (set -ex;
      echo "$PACKAGE_TARGETS" | while read -r vars; do (
      [ -z "$vars" ] && exit;
      export $vars;
      for ext in deb rpm; do (
      [ -z "$(ls build/$OS/$DIST/*.$ext 2> /dev/null)" ] && exit;
      bash update_repo.sh -o=$OS -d=$DIST -p=cartridge-cli -b="${REPO_PATH_S3}" build/$OS/$DIST
      ) done;
      ) done)

deploy-download.tarantool.org-tags:
  extends: .deploy-download.tarantool.org
  only:
    - tags

deploy-download.tarantool.org-manual:
  extends: .deploy-download.tarantool.org
  when: manual
