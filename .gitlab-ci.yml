stages:
  - test

variables:
  INSTALL_PACKAGES: git gcc make cmake unzip python36-pip
  BUNDLE_VERSION: 1.10.3-68-g618f48d

cache:
  key: $BUNDLE_VERSION
  paths:
    - tmp/sdk-1.10

.test_template: &test_template
  stage: test
  tags:
    - docker
  image: centos:7
  script:
    - make lint test

test_enterprise-1.10:
  <<: *test_template
  before_script:
    - yum -y install $INSTALL_PACKAGES
    - make tmp/sdk-1.10
    - source tmp/sdk-1.10/env.sh
    - tarantool -V
    - make ci_prepare

.test_opensource: &test_opensource
  <<: *test_template
  before_script:
    - curl -s https://packagecloud.io/install/repositories/tarantool/$TARANTOOL_VERSION/script.rpm.sh | bash
    - yum -y install tarantool tarantool-devel $INSTALL_PACKAGES
    - tarantool -V
    - make ci_prepare

test_opensource-1.10:
  <<: *test_opensource
  variables:
    TARANTOOL_VERSION: '1_10'

test_opensource-2.2:
  <<: *test_opensource
  variables:
    TARANTOOL_VERSION: '2_2'

.e2e-opensource-1.10:
  stage: test
  tags:
    - shell
    - vagrant
  before_script:
    - vagrant up
  script:
    - vagrant ssh centos < test/e2e/start-rpm.sh
    - vagrant ssh centos < test/e2e/test-cluster.sh
    - vagrant reload centos
    - sleep 1
    - vagrant ssh centos < test/e2e/test-cluster.sh
    - vagrant ssh centos < test/e2e/cleanup.sh

    - vagrant ssh ubuntu < test/e2e/start-deb.sh
    - vagrant ssh ubuntu < test/e2e/test-cluster.sh
    - vagrant reload ubuntu
    - sleep 1
    - vagrant ssh ubuntu < test/e2e/test-cluster.sh
    - vagrant ssh ubuntu < test/e2e/cleanup.sh
  after_script:
    - vagrant halt
    - vagrant destroy
