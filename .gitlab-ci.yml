stages:
  - test
  - pack
  - publish

default:
  image: centos:8

variables:
  BUNDLE_VERSION: 2.3.1-20-ga4330d8

.dind:
  tags:
    - dind
    - openstack
  services:
    - name: docker:dind
      alias: localhost
      command: ["--mtu=1300"]
  image: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_BUILDKIT: 1

.prebuild-template:
  extends: .dind
  stage: .pre
  only:
    changes:
      - Dockerfile
      - Dockerfile.releaser
      - wrapdocker
      - .gitlab-ci.yml
      - test/requirements.txt
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $IMAGE || true

    - docker build
      --cache-from $IMAGE
      --tag $IMAGE
      -f $DOCKERFILE
      ${BUILD_ARGS}
      .
    - docker push $IMAGE
  after_script:
    - docker logout registry.gitlab.com

prebuild-test:
  extends: .prebuild-template
  variables:
    IMAGE: ${CI_REGISTRY_IMAGE}:go
    DOCKERFILE: Dockerfile

prebuild-releaser:
  extends: .prebuild-template
  variables:
    IMAGE: ${CI_REGISTRY_IMAGE}:releaser
    DOCKERFILE: Dockerfile.releaser
    BUILD_ARGS: --build-arg PACKAGECLOUD_TOKEN=$PACKAGECLOUD_TOKEN

.test_template:
  stage: test
  extends: .dind
  image: ${CI_REGISTRY_IMAGE}:go
  script:
    - docker info
    - rpm --version
    - tarantool -V

    - export CARTRIDGE_TEMPDIR=`pwd`

    - tarantoolctl rocks install luacheck

    - mage lint
    - mage unit
    - mage integration
    - mage testExamples
    - mage e2e

test_enterprise-2.3:
  extends: .test_template
  cache:
    key: $BUNDLE_VERSION
    paths:
      - tmp/tarantool-enterprise
  variables:
    TARANTOOL_SDK_PATH: tmp/tarantool-enterprise
  before_script:
    - mage sdk
    - source tmp/tarantool-enterprise/env.sh

    - export TARANTOOL_SDK_PATH=`realpath $TARANTOOL_SDK_PATH`

.test_opensource:
  extends: .test_template
  before_script:
    - curl -L https://tarantool.io/installer.sh | VER=${TARANTOOL_VERSION} bash
    - yum install -y tarantool-devel

test_opensource-1.10:
  extends: .test_opensource
  variables:
    TARANTOOL_VERSION: '1.10'

test_opensource-2.3:
  extends: .test_opensource
  variables:
    TARANTOOL_VERSION: '2.3'

.pack:
  stage: pack
  extends: .dind
  image: ${CI_REGISTRY_IMAGE}:releaser
  script:
    - goreleaser release --rm-dist ${GORELEASER_FLAGS}
  artifacts:
    expire_in: 12h
    paths:
      - dist/

pack-tags:
  extends: .pack
  only:
    - tags

pack-master:
  extends: .pack
  variables:
    GORELEASER_FLAGS: --skip-validate --skip-publish
  only:
    - master

pack-manual:
  extends: .pack
  variables:
    GORELEASER_FLAGS: --skip-validate --skip-publish
  when: manual

.publish-s3:
  stage: publish
  extends: .dind
  image: ${CI_REGISTRY_IMAGE}:releaser
  before_script:
    - gpg --import <(echo "$GPG_KEY")
  script:
    - mage publishS3
  artifacts:
    expire_in: 12h
    paths:
      - dist/

publish-s3-tags:
  extends: .publish-s3
  variables:
    S3_FOLDER: release/modules
  only:
    - tags

publish-s3-manual:
  extends: .publish-s3
  variables:
    S3_FOLDER: check/modules
  when: manual

.publish-pkgcloud:
  stage: publish
  extends: .dind
  image: ${CI_REGISTRY_IMAGE}:releaser
  script:
    - mage publishPkgcloud
  artifacts:
    expire_in: 12h
    paths:
      - dist/

publish-pkgcloud-tags:
  extends: .publish-pkgcloud
  variables:
    PACKAGECLOUD_USER: tarantool
  only:
    - tags

publish-pkgcloud-manual:
  extends: .publish-pkgcloud
  variables:
    PACKAGECLOUD_USER: tarantool-test
  when: manual
  before_script:
    - export PACKAGECLOUD_TOKEN=$PACKAGECLOUD_TEST_TOKEN
